{% set name = "dbotu" %}
{% set version = "1.5.3" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "384abd3fdce7b355255eeefcc671d037191520d9223be7a8f58a41a10f97e3ce" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  path: ../
  ## pypi version no longer updated
  # fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  # '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record=record.txt
  noarch: python

requirements:
  build:
    - python
    - setuptools

  run:
    - python
    - numpy
    - pandas
    - scipy
    - biopython
    - python-levenshtein

about:
  home: http://github.com/almlab/dbotu3
  license: 'License :: OSI Approved :: MIT License'
  license_family: MIT
  license_file: ''
  summary: Distribution-based OTU calling
  description: "
    Distribution-based OTU calling
    ==============================

    *dbotu3* is a new implementation of Sarah Preheim's [dbOTU](http://aem.asm.org/content/79/21/6593.long) algorithm.  The scope is narrower, the numerical comparisons are faster, and the interface is more user-friendly.

    Read the [documentation](http://dbotu3.readthedocs.io/en/latest/) for:

      - a guide to getting started,
      - an explanation of the algorithm, and
      - the API reference.

    You can also read our new [paper](https://doi.org/10.1371/journal.pone.0176335) for more technical details about the algorithm.

    The Alm Lab [website](http://almlab.mit.edu/dbotu3.html) also has a short page with information.

    For more information on installation, version histories, and how to contribute, please go to the project's [repo](https://github.com/almlab/dbotu3/).
    "
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
